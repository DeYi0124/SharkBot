import consts from '../consts.js';

/**
 * This class implements league endpoints of the LoL API <https://developer.riotgames.com/api-methods/#league-v3>
 * @author Filip Butkiewicz aka. bagnz0r <http://github.com/bagnz0r>
 */
class League {

    constructor(apiKey, region) {
        this.headers = new Headers({
            'X-Riot-Token': apiKey
        });

        this.url = `https://${consts.zone[region]}/lol/league/v3`;
    }

    /**
     * Get the challenger league for a given queue
     * @param {Queue} queue
     * @return {Promise}
     */
    getChallengerLeagueByQueue(queue) {
        return fetch(`${this.url}/challengerleagues/by-queue/${queue}`, { headers: this.headers });
    }

    /**
     * Get leagues in all queues for a given summoner ID.
     * @param {Number} summonerId
     * @return {Promise}
     */
    getLeaguesBySummonerId(summonerId) {
        return fetch(`${this.url}/leagues/by-summoner/${summonerId}`, { headers: this.headers });
    }

    /**
     * Get the master league for a given queue.
     * @param {Queue} queue
     * @return {Promise}
     */
    getMasterLeagueByQueue(queue) {
        return fetch(`${this.url}/masterleagues/by-queue/${queue}`, { headers: this.headers });
    }

    /**
     * Get league positions in all queues for a given summoner ID.
     * @param {Number} summonerId
     * @return {Promise}
     */
    getLeaguePositionsBySummonerId(summonerId) {
        return fetch(`${this.url}/positions/by-summoner/${summonerId}`, { headers: this.headers });
    }
    
}

export default League;
