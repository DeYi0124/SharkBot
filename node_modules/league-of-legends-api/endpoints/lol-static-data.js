import consts from '../consts.js';

/**
 * This class implements lol-static-data endpoints of the LoL API <https://developer.riotgames.com/api-methods/#lol-static-data-v3>
 * @author Filip Butkiewicz aka. bagnz0r <http://github.com/bagnz0r>
 */
class LolStaticData {

    constructor(apiKey, region) {
        this.headers = new Headers({
            'X-Riot-Token': apiKey
        });

        this.url = `https://${consts.zone[region]}/lol/lol-static-data/v3`;
    }

    /**
     * Retrieves champion list.
     * @return Promise
     */
    getChampions() {
        return fetch(`${this.url}/champions`, { headers: this.headers });
    }

    /**
     * Retrieves a champion by ID.
     * @param {Number} championId
     * @return {Promise}
     */
    getChampionById(championId) {
        return fetch(`${this.url}/champions/${championId}`, { headers: this.headers });
    }

    /**
     * Retrieves an item list.
     * @return {Promise}
     */
    getItems() {
        return fetch(`${this.url}/items`, { headers: this.headers });
    }

    /**
     * Retrieves an item by ID.
     * @param {Number} itemId
     * @return {Promise}
     */
    getItemById(itemId) {
        return fetch(`${this.url}/items/${itemId}`, { headers: this.headers });
    }

    /**
     * Retrieves language strings data.
     * @return {Promise}
     */
    getLanguageStrings() {
        return fetch(`${this.url}/language-strings`, { headers: this.headers });
    }

    /**
     * Retrieves supported languages data.
     * @return {Promise}
     */
    getLanguages() {
        return fetch(`${this.url}/languages`, { headers: this.headers });
    }

    /**
     * Retrieves map data.
     * @return {Promise}
     */
    getMaps() {
        return fetch(`${this.url}/maps`, { headers: this.headers });
    }

    /**
     * Retrieves a list of masteries.
     * @return {Promise}
     */
    getMasteries() {
        return fetch(`${this.url}/masteries`, { headers: this.headers });
    }

    /**
     * Retrieves a mastery by ID.
     * @param {Number} masteryId
     * @return {Promise}
     */
    getMasteryById(masteryId) {
        return fetch(`${this.url}/masteries/${masteryId}`, { headers: this.headers });
    }

    /**
     * Retrieves profile icons.
     * @return {Promise}
     */
    getProfileIcons() {
        return fetch(`${this.url}/profile-icons`, { headers: this.headers });
    }

    /**
     * Retrieves realm data.
     * @return {Promise}
     */
    getRealms() {
        return fetch(`${this.url}/realms`, { headers: this.headers });
    }

    /**
     * Retrieves a list of runes.
     * @return {Promise}
     */
    getRunes() {
        return fetch(`${this.url}/runes`, { headers: this.headers });
    }

    /**
     * Retrieves a rune by ID.
     * @param {Number} runeId
     * @return {Promise}
     */
    getRuneById(runeId) {
        return fetch(`${this.url}/runes/${runeId}`, { headers: this.headers });
    }

    /**
     * Retrieves a list of summoner spells.
     * @return {Promise}
     */
    getSummonerSpells() {
        return fetch(`${this.url}/summoner-spells`, { headers: this.headers });
    }

    /**
     * Retrieves a summoner spell by ID.
     * @param {Number} summonerSpellId
     * @return {Promise}
     */
    getSummonerSpellById(summonerSpellId) {
        return fetch(`${this.url}/summoner-spells/${summonerSpellId}`, { headers: this.headers });
    }

    /**
     * Retrieves version data.
     * @return {Promise}
     */
    getVersions() {
        return fetch(`${this.url}/versions`, { headers: this.headers });
    }

}

export default LolStaticData;
